{"version":3,"file":"static/js/932.4cb94e75.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/PhoneBookList/PhoneBookList.module.css?b096","components/PhoneBookList/PhoneBookList.jsx","webpack://react-homework-template/./src/components/Form/Form.module.css?89ba","components/Form/Form.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/Modal/Modal.module.css?28d7","components/Modal/Modal.jsx","webpack://react-homework-template/./src/components/FormChangeContact/FormChangeContact.module.css?429d","components/FormChangeContact/FormChangeContact.jsx","redux/items/phone-book-items-selector.js","redux/filter/phoneBookFilter-selector.js","webpack://react-homework-template/./src/pages/ContactsPage/ContactsPage.module.css?0a45","pages/ContactsPage/ContactsPage.jsx","../node_modules/nanoid/index.browser.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"PhoneBookList_list__n0Wz4\",\"phoneBookListItem\":\"PhoneBookList_phoneBookListItem__Rb19s\",\"nameText\":\"PhoneBookList_nameText__dAIeL\",\"phoneNumber\":\"PhoneBookList_phoneNumber__8ZII5\",\"buttonDelete\":\"PhoneBookList_buttonDelete__aJii2\"};","import s from './PhoneBookList.module.css';\nimport PropTypes from 'prop-types';\n\nconst PhoneBookList = ({ phoneList, onDeletePhoneListItem, onClick }) => {\n  // console.log(phoneList);\n  return (\n    <ul className={s.list}>\n      {phoneList.map(({ id, name, number }) => (\n        <li key={id} id={id} className={s.phoneBookListItem} onClick={onClick}>\n          <p className={s.nameText}>{name}</p>\n          <p className={s.phoneNumber}>{number}</p>\n          <button\n            className={s.buttonDelete}\n            onClick={() => onDeletePhoneListItem(id)}\n          >\n            remove\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default PhoneBookList;\n\nPhoneBookList.propTypes = {\n  phoneList: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n  onDeletePhoneListItem: PropTypes.func,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Form_form__e1yzW\",\"label\":\"Form_label__8nx+5\",\"input\":\"Form_input__FTtTw\",\"addContact\":\"Form_addContact__bfrLD\"};","import React from 'react';\nimport { useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport s from './Form.module.css';\nimport PropTypes from 'prop-types';\n\nfunction Form({ onSubmit }) {\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n\n  const nameInputId = nanoid();\n  const numberInputId = nanoid();\n\n  const hendleInputChange = event => {\n    const { name, value } = event.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'phone':\n        setPhone(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const hendleSubmit = event => {\n    event.preventDefault();\n    const data = {\n      name,\n      number: phone,\n    };\n\n    onSubmit(data);\n\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName('');\n    setPhone('');\n  };\n\n  return (\n    <form onSubmit={hendleSubmit} className={s.form}>\n      <label htmlFor={nameInputId} className={s.label}>\n        Name:\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          placeholder=\"Input name\"\n          className={s.input}\n          value={name}\n          onChange={hendleInputChange}\n          id={nameInputId}\n        />\n      </label>\n      <label htmlFor={numberInputId} className={s.label}>\n        Number:\n        <input\n          type=\"tel\"\n          name=\"phone\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          placeholder=\"Input number\"\n          className={s.input}\n          value={phone}\n          onChange={hendleInputChange}\n          id={numberInputId}\n        />\n      </label>\n      <button type=\"submit\" className={s.addContact}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nexport default Form;\n\nForm.propTypes = {\n  onSubmit: PropTypes.func,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"Filter_filter__vxThR\",\"label\":\"Filter_label__vEd1E\",\"input\":\"Filter_input__N7T3z\",\"title\":\"Filter_title__pSkfx\"};","import s from './Filter.module.css';\nimport PropTypes from 'prop-types';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <div className={s.filter}>\n      <h1 className={s.title}>CONTACTS:</h1>\n      <label className={s.label}>\n        FILTER BY NAME:\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={value}\n          onChange={onChange}\n          className={s.input}\n        />\n      </label>\n    </div>\n  );\n};\n\nexport default Filter;\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"Modal_overlay__r63M6\",\"modal__content\":\"Modal_modal__content__VSCXP\"};","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport s from './Modal.module.css';\n\nconst Modal = ({ onClose, children }) => {\n  const modalRoot = document.querySelector('#modal-root');\n\n  useEffect(() => {\n    window.addEventListener('keydown', hendleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', hendleKeyDown);\n    };\n  });\n\n  const hendleKeyDown = event => {\n    if (event.code === 'Escape') {\n      onClose();\n    }\n  };\n  const hendleBackDropClick = event => {\n    if (event.currentTarget === event.target) {\n      onClose();\n    }\n  };\n  return createPortal(\n    <div className={s.overlay} onClick={hendleBackDropClick}>\n      <div className={s.modal__content}>{children}</div>\n    </div>,\n    modalRoot\n  );\n};\n\nexport default Modal;\n","// extracted by mini-css-extract-plugin\nexport default {\"changeContact\":\"FormChangeContact_changeContact__bO2wI\",\"label\":\"FormChangeContact_label__i617B\",\"input\":\"FormChangeContact_input__jNxdy\"};","import { useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport { useDispatch } from 'react-redux';\nimport { changeContactsItems } from 'redux/items/phone-book-items-operations';\n\nimport s from './FormChangeContact.module.css';\n\nconst FormChangeContact = ({ findContact, onClose }) => {\n  const [name, setName] = useState(findContact.name);\n  const [phone, setPhone] = useState(findContact.number);\n\n  const nameInputId = nanoid();\n  const numberInputId = nanoid();\n\n  const dispatch = useDispatch();\n\n  const hendleInputChange = event => {\n    const { name, value } = event.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'phone':\n        setPhone(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const hendleSubmit = event => {\n    event.preventDefault();\n    const data = {\n      id: findContact.id,\n      name,\n      number: phone,\n    };\n    dispatch(changeContactsItems(data));\n    resetForm();\n    onClose();\n  };\n\n  const resetForm = () => {\n    setName('');\n    setPhone('');\n  };\n\n  return (\n    <form onSubmit={hendleSubmit} className={s.form}>\n      <label htmlFor={nameInputId} className={s.label}>\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          placeholder=\"Input name\"\n          className={s.input}\n          value={name}\n          onChange={hendleInputChange}\n          id={nameInputId}\n        />\n      </label>\n      <label htmlFor={numberInputId} className={s.label}>\n        <input\n          type=\"tel\"\n          name=\"phone\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          placeholder=\"Input number\"\n          className={s.input}\n          value={phone}\n          onChange={hendleInputChange}\n          id={numberInputId}\n        />\n      </label>\n      <button type=\"submit\" className={s.changeContact} onSubmit={hendleSubmit}>\n        Change contact\n      </button>\n    </form>\n  );\n};\n\nexport default FormChangeContact;\n","export const getContactsList = store => store.contacts;\n","export const getFilter = store => store.filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"title__change\":\"ContactsPage_title__change__1bNaX\",\"contact__name\":\"ContactsPage_contact__name__o110v\",\"modal__close\":\"ContactsPage_modal__close__CD0Ws\"};","import { useEffect, useState } from 'react';\nimport PhoneBookList from '../../components/PhoneBookList/PhoneBookList';\nimport Form from '../../components/Form/Form';\nimport Filter from '../../components/Filter/Filter';\nimport Modal from 'components/Modal';\nimport FormChangeContact from 'components/FormChangeContact';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  fetchContacts,\n  deleteContacts,\n  addItems,\n} from 'redux/items/phone-book-items-operations';\nimport { addFilter } from 'redux/filter/phoneBookFilter-actions';\nimport { getContactsList } from 'redux/items/phone-book-items-selector';\nimport { getFilter } from 'redux/filter/phoneBookFilter-selector';\n\nimport s from './ContactsPage.module.css';\n\nconst ContactsPage = () => {\n  const [showModal, setShowModal] = useState(false);\n  const [findContact, setFindContact] = useState({});\n  const { loading } = useSelector(getContactsList);\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const phoneList = useSelector(store => {\n    const filteredContact = store.contacts.items.filter(item =>\n      item.name.toLowerCase().includes(store.filter.toLocaleLowerCase())\n    );\n    return filteredContact;\n  });\n  // console.log(phoneList);\n\n  const onAddContact = data => {\n    const action = addItems(data);\n    dispatch(action);\n  };\n\n  const onDelContact = id => {\n    const action = deleteContacts(id);\n    dispatch(action);\n    // dispatch(fetchContacts());\n  };\n\n  const onChangeFilter = event => {\n    const action = addFilter(event.currentTarget.value);\n    dispatch(action);\n  };\n\n  const toggleModal = () => {\n    setShowModal(!showModal);\n  };\n  const findIdContact = event => {\n    const searchContact = phoneList.find(\n      contact => contact.id.toString() === event.currentTarget.id\n    );\n    setFindContact(searchContact);\n    // console.log(searchContact);\n    toggleModal();\n  };\n  return (\n    <div>\n      <Form onSubmit={onAddContact} />\n      <Filter value={filter} onChange={onChangeFilter} />\n      {loading && <p>...Loading</p>}\n      <PhoneBookList\n        phoneList={phoneList}\n        onDeletePhoneListItem={onDelContact}\n        onClick={findIdContact}\n      />\n      {showModal && (\n        <Modal onClose={toggleModal}>\n          <h2 className={s.title__change}>CHANGE CONTACT</h2>\n          <div className={s.contact}>\n            <p className={s.contact__name}>Name: {findContact.name}</p>\n            <p className={s.contact__name}>Tel: {findContact.number}</p>\n          </div>\n          <button\n            type=\"button\"\n            onClick={toggleModal}\n            className={s.modal__close}\n          >\n            close\n          </button>\n          <FormChangeContact onClose={toggleModal} findContact={findContact} />\n        </Modal>\n      )}\n    </div>\n  );\n};\n\nexport default ContactsPage;\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["phoneList","onDeletePhoneListItem","onClick","className","s","map","id","name","number","onSubmit","useState","setName","phone","setPhone","nameInputId","nanoid","numberInputId","hendleInputChange","event","currentTarget","value","resetForm","preventDefault","htmlFor","type","pattern","title","required","placeholder","onChange","onClose","children","modalRoot","document","querySelector","useEffect","window","addEventListener","hendleKeyDown","removeEventListener","code","createPortal","target","findContact","dispatch","useDispatch","hendleSubmit","data","changeContactsItems","getContactsList","store","contacts","getFilter","filter","showModal","setShowModal","setFindContact","loading","useSelector","fetchContacts","items","item","toLowerCase","includes","toLocaleLowerCase","toggleModal","action","addItems","addFilter","deleteContacts","searchContact","find","contact","toString","size","crypto","getRandomValues","Uint8Array","reduce","byte","toUpperCase"],"sourceRoot":""}