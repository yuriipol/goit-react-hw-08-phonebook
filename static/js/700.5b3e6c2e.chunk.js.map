{"version":3,"file":"static/js/700.5b3e6c2e.chunk.js","mappings":"sNACA,EAAwB,yBAAxB,EAAyD,yBAAzD,EAA0F,yB,mBCGpFA,EAAY,SAAC,GAUZ,IATLC,EASI,EATJA,MACAC,EAQI,EARJA,KACAC,EAOI,EAPJA,MACAC,EAMI,EANJA,YACAC,EAKI,EALJA,SACAC,EAII,EAJJA,KACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,MACAC,EACI,EADJA,SAEMC,GAAKC,EAAAA,EAAAA,UAAQ,kBAAMC,EAAAA,EAAAA,KAAN,GAAgB,IACnC,OACE,gBAAKC,UAAWC,EAAhB,SACGb,IACC,mBAAOc,QAASL,EAAIG,UAAWC,EAA/B,UACGb,EADH,KAEE,kBACEY,UAAWC,EACXR,KAAMA,EACNJ,KAAMA,EACNK,QAASA,EACTC,MAAOA,EACPH,SAAUA,EACVF,MAAOA,EACPO,GAAIA,EACJN,YAAaA,EACbK,SAAUA,QAMrB,EAED,IAEAT,EAAUgB,aAAe,CACvBV,KAAM,OACND,UAAU,GC3CL,IAAMY,EACL,CACJhB,MAAO,OACPC,KAAM,OACNE,YAAa,aACbC,UAAU,EACVC,KAAM,OACNC,QAAS,yHACTC,MACE,0IATOS,EAWJ,CACLhB,MAAO,QACPC,KAAM,QACNE,YAAa,cACbC,UAAU,EACVC,KAAM,OACNC,QAAS,mDACTC,MAAO,8BAlBES,EAoBD,CACRhB,MAAO,WACPC,KAAM,WACNE,YAAa,iBACbC,UAAU,EACVC,KAAM,OACNE,MAAO,8BCzBX,EAAiC,qCC6DjC,EAzDqB,SAAC,GAAkB,IAAhBU,EAAe,EAAfA,SACtB,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOjB,EAAP,KAAakB,EAAb,KACA,GAA0BD,EAAAA,EAAAA,UAAS,IAAnC,eAAOE,EAAP,KAAcC,EAAd,KACA,GAAgCH,EAAAA,EAAAA,UAAS,IAAzC,eAAOI,EAAP,KAAiBC,EAAjB,KAEMC,EAAoB,SAAAC,GACxB,MAAwBA,EAAMC,cAAtBzB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAEd,OAAQD,GACN,IAAK,OACHkB,EAAQjB,GACR,MACF,IAAK,QACHmB,EAASnB,GACT,MACF,IAAK,WACHqB,EAAYrB,GACZ,MACF,QACE,OAEL,EAeKyB,EAAY,WAChBR,EAAQ,IACRE,EAAS,IACTE,EAAY,GACb,EACD,OACE,kBAAMN,SAnBa,SAAAQ,GACnBA,EAAMG,iBAONX,EANiB,CACfhB,KAAAA,EACAmB,MAAAA,EACAE,SAAAA,IAKFK,GACD,EAQC,WACE,SAAC,GAAD,QAAWzB,MAAOD,EAAMO,SAAUgB,GAAuBR,KACzD,SAAC,GAAD,QAAWd,MAAOkB,EAAOZ,SAAUgB,GAAuBR,KAC1D,SAAC,GAAD,QACEd,MAAOoB,EACPd,SAAUgB,GACNR,KAEN,mBAAQX,KAAK,SAASO,UAAWC,EAAjC,6BAKL,E,oBC1CD,EAdqB,WACnB,IAAMgB,GAAWC,EAAAA,EAAAA,MAKjB,OACE,4BACE,2CACA,SAAC,EAAD,CAAcb,SAPD,SAAAc,GACfF,GAASG,EAAAA,EAAAA,GAAOD,GACjB,MAQF,C","sources":["webpack://react-homework-template/./src/components/TextField/TextField.module.css?b6c9","components/TextField/TextField.jsx","components/TextField/fields.js","webpack://react-homework-template/./src/components/RegisterForm/RegisterForm.module.css?a5d4","components/RegisterForm/RegisterForm.jsx","pages/registerPage/RegisterPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"block\":\"TextField_block__9MYxb\",\"label\":\"TextField_label__vkJH3\",\"input\":\"TextField_input__Co8UC\"};","import s from './TextField.module.css';\nimport { nanoid } from 'nanoid';\nimport { useMemo } from 'react';\n\nconst TextField = ({\n  label,\n  name,\n  value,\n  placeholder,\n  required,\n  type,\n  pattern,\n  title,\n  onChange,\n}) => {\n  const id = useMemo(() => nanoid(), []);\n  return (\n    <div className={s.block}>\n      {label && (\n        <label htmlFor={id} className={s.label}>\n          {label}:\n          <input\n            className={s.input}\n            type={type}\n            name={name}\n            pattern={pattern}\n            title={title}\n            required={required}\n            value={value}\n            id={id}\n            placeholder={placeholder}\n            onChange={onChange}\n          />\n        </label>\n      )}\n    </div>\n  );\n};\n\nexport default TextField;\n\nTextField.defaultProps = {\n  type: 'text',\n  required: false,\n};\n","export const fields = {\n  name: {\n    label: 'Name',\n    name: 'name',\n    placeholder: 'input name',\n    required: true,\n    type: 'text',\n    pattern: \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\n    title:\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n  },\n  email: {\n    label: 'Email',\n    name: 'email',\n    placeholder: 'input email',\n    required: true,\n    type: 'text',\n    pattern: '([A-z0-9_.-]{1,})@([A-z0-9_.-]{1,}).([A-z]{2,8})',\n    title: 'Please enter correct email',\n  },\n  password: {\n    label: 'Password',\n    name: 'password',\n    placeholder: 'input password',\n    required: true,\n    type: 'text',\n    title: 'Please enter correct email',\n  },\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"registerButton\":\"RegisterForm_registerButton__81cdR\"};","import { useState } from 'react';\nimport TextField from 'components/TextField';\nimport { fields } from 'components/TextField/fields';\nimport s from './RegisterForm.module.css';\n\nconst RegisterForm = ({ onSubmit }) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const hendleInputChange = event => {\n    const { name, value } = event.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'email':\n        setEmail(value);\n        break;\n      case 'password':\n        setPassword(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const hendleSubmit = event => {\n    event.preventDefault();\n    const dataUser = {\n      name,\n      email,\n      password,\n    };\n\n    onSubmit(dataUser);\n\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n  return (\n    <form onSubmit={hendleSubmit}>\n      <TextField value={name} onChange={hendleInputChange} {...fields.name} />\n      <TextField value={email} onChange={hendleInputChange} {...fields.email} />\n      <TextField\n        value={password}\n        onChange={hendleInputChange}\n        {...fields.password}\n      />\n      <button type=\"submit\" className={s.registerButton}>\n        Register user\n      </button>\n    </form>\n  );\n};\n\nexport default RegisterForm;\n","import RegisterForm from 'components/RegisterForm';\nimport { useDispatch } from 'react-redux';\nimport { signup } from '../../redux/auth/auth-operations';\n\nconst RegisterPage = () => {\n  const dispatch = useDispatch();\n  const onSignUp = data => {\n    dispatch(signup(data));\n  };\n\n  return (\n    <div>\n      <h2>Register page</h2>\n      <RegisterForm onSubmit={onSignUp} />\n    </div>\n  );\n};\n\nexport default RegisterPage;\n"],"names":["TextField","label","name","value","placeholder","required","type","pattern","title","onChange","id","useMemo","nanoid","className","s","htmlFor","defaultProps","fields","onSubmit","useState","setName","email","setEmail","password","setPassword","hendleInputChange","event","currentTarget","resetForm","preventDefault","dispatch","useDispatch","data","signup"],"sourceRoot":""}