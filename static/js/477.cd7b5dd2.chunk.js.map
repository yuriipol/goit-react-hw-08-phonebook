{"version":3,"file":"static/js/477.cd7b5dd2.chunk.js","mappings":"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","sources":["components/TextField/fields.js","webpack://react-homework-template/./src/components/TextField/TextField.module.css?b6c9","components/TextField/TextField.jsx","webpack://react-homework-template/./src/components/RegisterForm/RegisterForm.module.css?a5d4","components/RegisterForm/RegisterForm.jsx","pages/registerPage/RegisterPage.jsx","../node_modules/nanoid/index.browser.js"],"sourcesContent":["export const fields = {\n  name: {\n    label: 'Name',\n    name: 'name',\n    placeholder: 'input name',\n    required: true,\n    type: 'text',\n    pattern: \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\n    title:\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n  },\n  email: {\n    label: 'Email',\n    name: 'email',\n    placeholder: 'input email',\n    required: true,\n    type: 'text',\n    pattern: '([A-z0-9_.-]{1,})@([A-z0-9_.-]{1,}).([A-z]{2,8})',\n    title: 'Please enter correct email',\n  },\n  password: {\n    label: 'Password',\n    name: 'password',\n    placeholder: 'input password',\n    required: true,\n    type: 'text',\n    title: 'Please enter correct email',\n  },\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"block\":\"TextField_block__9MYxb\",\"label\":\"TextField_label__vkJH3\",\"input\":\"TextField_input__Co8UC\"};","import s from './TextField.module.css';\nimport { nanoid } from 'nanoid';\nimport { useMemo } from 'react';\n\nconst TextField = ({\n  label,\n  name,\n  value,\n  placeholder,\n  required,\n  type,\n  pattern,\n  title,\n  onChange,\n}) => {\n  const id = useMemo(() => nanoid(), []);\n  return (\n    <div className={s.block}>\n      {label && (\n        <label htmlFor={id} className={s.label}>\n          {label}:\n          <input\n            className={s.input}\n            type={type}\n            name={name}\n            pattern={pattern}\n            title={title}\n            required={required}\n            value={value}\n            id={id}\n            placeholder={placeholder}\n            onChange={onChange}\n          />\n        </label>\n      )}\n    </div>\n  );\n};\n\nexport default TextField;\n\nTextField.defaultProps = {\n  type: 'text',\n  required: false,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"registerButton\":\"RegisterForm_registerButton__81cdR\"};","import { useState } from 'react';\nimport TextField from 'components/TextField';\nimport { fields } from 'components/TextField/fields';\nimport s from './RegisterForm.module.css';\n\nconst RegisterForm = ({ onSubmit }) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const hendleInputChange = event => {\n    const { name, value } = event.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'email':\n        setEmail(value);\n        break;\n      case 'password':\n        setPassword(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const hendleSubmit = event => {\n    event.preventDefault();\n    const dataUser = {\n      name,\n      email,\n      password,\n    };\n\n    onSubmit(dataUser);\n\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n  return (\n    <form onSubmit={hendleSubmit}>\n      <TextField value={name} onChange={hendleInputChange} {...fields.name} />\n      <TextField value={email} onChange={hendleInputChange} {...fields.email} />\n      <TextField\n        value={password}\n        onChange={hendleInputChange}\n        {...fields.password}\n      />\n      <button type=\"submit\" className={s.registerButton}>\n        Register user\n      </button>\n    </form>\n  );\n};\n\nexport default RegisterForm;\n","import RegisterForm from 'components/RegisterForm';\nimport { useDispatch } from 'react-redux';\nimport { signup } from '../../redux/auth/auth-operations';\n\nimport { Navigate } from 'react-router-dom';\nimport useAuth from 'shared/hooks/useAuth';\n\nconst RegisterPage = () => {\n  const dispatch = useDispatch();\n  const onSignUp = data => {\n    dispatch(signup(data));\n  };\n  const isLogin = useAuth();\n  if (isLogin) {\n    return <Navigate to=\"/contacts\" />;\n  }\n  return (\n    <div>\n      <h2>Register page</h2>\n      <RegisterForm onSubmit={onSignUp} />\n    </div>\n  );\n};\n\nexport default RegisterPage;\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["fields","name","label","placeholder","required","type","pattern","title","email","password","TextField","value","onChange","id","useMemo","nanoid","className","s","htmlFor","defaultProps","onSubmit","useState","setName","setEmail","setPassword","hendleInputChange","event","currentTarget","resetForm","preventDefault","dispatch","useDispatch","useAuth","to","data","signup","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase"],"sourceRoot":""}